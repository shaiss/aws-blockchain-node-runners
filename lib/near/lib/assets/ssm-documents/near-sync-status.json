{
  "schemaVersion": "2.2",
  "description": "Check NEAR blockchain sync status and progress",
  "parameters": {},
  "mainSteps": [
    {
      "action": "aws:runShellScript",
      "name": "nearSyncStatus",
      "inputs": {
        "timeoutSeconds": "30",
        "runCommand": [
          "#!/bin/bash",
          "set -e",
          "",
          "echo '=== NEAR Blockchain Sync Status ===' | tee -a /var/log/near-sync-status.log",
          "echo \"$(date): Checking sync status\" | tee -a /var/log/near-sync-status.log",
          "",
          "# Check if NEAR service is running",
          "if ! systemctl is-active --quiet near.service; then",
          "    echo '‚ùå NEAR service is not running'",
          "    systemctl status near.service --no-pager -l || true",
          "    exit 1",
          "fi",
          "",
          "# Check RPC endpoint availability",
          "echo '--- RPC Endpoint Status ---'",
          "if ! curl -s -f http://localhost:3030/status >/dev/null; then",
          "    echo '‚ö†Ô∏è  RPC endpoint not responding - node may still be starting or syncing headers'",
          "    echo 'This is normal during initial sync phases'",
          "    ",
          "    # Check recent log activity for sync progress",
          "    echo '--- Recent NEAR Log Activity ---'",
          "    if [[ -f /var/log/near-node.log ]]; then",
          "        echo 'Last 10 lines from NEAR logs:'",
          "        tail -10 /var/log/near-node.log",
          "    fi",
          "    exit 0",
          "fi",
          "",
          "# Get detailed sync information",
          "echo '--- Blockchain Sync Information ---'",
          "STATUS_JSON=$(curl -s http://localhost:3030/status)",
          "",
          "# Parse sync information",
          "SYNCING=$(echo \"$STATUS_JSON\" | jq -r '.sync_info.syncing')",
          "LATEST_BLOCK=$(echo \"$STATUS_JSON\" | jq -r '.sync_info.latest_block_height')",
          "LATEST_BLOCK_TIME=$(echo \"$STATUS_JSON\" | jq -r '.sync_info.latest_block_time')",
          "CHAIN_ID=$(echo \"$STATUS_JSON\" | jq -r '.chain_id')",
          "NODE_KEY=$(echo \"$STATUS_JSON\" | jq -r '.node_key')",
          "VERSION=$(echo \"$STATUS_JSON\" | jq -r '.version.version')",
          "",
          "echo \"Chain ID: $CHAIN_ID\"",
          "echo \"Node Version: $VERSION\"",
          "echo \"Latest Block Height: $LATEST_BLOCK\"",
          "echo \"Latest Block Time: $LATEST_BLOCK_TIME\"",
          "echo \"Currently Syncing: $SYNCING\"",
          "",
          "# Calculate sync progress if possible",
          "if [[ \"$SYNCING\" == \"false\" ]]; then",
          "    echo '‚úÖ Node is fully synced and ready for RPC calls'",
          "else",
          "    echo 'üîÑ Node is still syncing (this can take 4-5 hours for mainnet)'",
          "    ",
          "    # Try to get network height for comparison",
          "    echo '--- Network Comparison ---'",
          "    # This is a rough estimate - actual network height varies",
          "    CURRENT_TIME=$(date +%s)",
          "    BLOCK_TIME=$(date -d \"$LATEST_BLOCK_TIME\" +%s)",
          "    SECONDS_BEHIND=$((CURRENT_TIME - BLOCK_TIME))",
          "    MINUTES_BEHIND=$((SECONDS_BEHIND / 60))",
          "    HOURS_BEHIND=$((MINUTES_BEHIND / 60))",
          "    ",
          "    if [[ $HOURS_BEHIND -lt 1 ]]; then",
          "        echo \"‚úÖ Node is $MINUTES_BEHIND minutes behind network\"",
          "    elif [[ $HOURS_BEHIND -lt 24 ]]; then",
          "        echo \"üîÑ Node is $HOURS_BEHIND hours behind network\"",
          "    else",
          "        DAYS_BEHIND=$((HOURS_BEHIND / 24))",
          "        echo \"‚è≥ Node is $DAYS_BEHIND days behind network (initial sync)\"",
          "    fi",
          "fi",
          "",
          "# Check peer connections",
          "echo '--- Network Connectivity ---'",
          "PEER_COUNT=$(echo \"$STATUS_JSON\" | jq -r '.sync_info.epoch_start_height // 0')",
          "echo \"Connected to NEAR network\"",
          "",
          "# Performance metrics",
          "echo '--- Node Performance ---'",
          "echo \"CPU Usage: $(top -bn1 | grep 'Cpu(s)' | cut -d',' -f1 | cut -d':' -f2)\"",
          "echo \"Memory Usage: $(free -h | grep Mem | awk '{print $3\\\"/\\\"$2}')\"",
          "",
          "echo \"$(date): Sync status check completed\" | tee -a /var/log/near-sync-status.log",
          ""
        ]
      }
    }
  ]
}
