{
  "schemaVersion": "2.2",
  "description": "Comprehensive health check for NEAR blockchain node",
  "parameters": {},
  "mainSteps": [
    {
      "action": "aws:runShellScript",
      "name": "nearHealthCheck",
      "inputs": {
        "timeoutSeconds": "60",
        "runCommand": [
          "#!/bin/bash",
          "set -e",
          "",
          "echo '=== NEAR Node Health Check ===' | tee -a /var/log/near-health-check.log",
          "echo \"$(date): Starting health check\" | tee -a /var/log/near-health-check.log",
          "",
          "# Check NEAR service status",
          "echo '--- NEAR Service Status ---'",
          "if systemctl is-active --quiet near.service; then",
          "    echo '✅ NEAR service is running'",
          "    systemctl status near.service --no-pager -l",
          "else",
          "    echo '❌ NEAR service is not running'",
          "    systemctl status near.service --no-pager -l || true",
          "    exit 1",
          "fi",
          "",
          "# Check NEAR binary version",
          "echo '--- NEAR Binary ---'",
          "if command -v neard >/dev/null 2>&1; then",
          "    NEAR_VERSION=$(neard --version)",
          "    echo \"✅ NEAR binary: $NEAR_VERSION\"",
          "else",
          "    echo '❌ NEAR binary not found'",
          "    exit 1",
          "fi",
          "",
          "# Check data volume mount",
          "echo '--- Data Volume ---'",
          "if mountpoint -q /near/mainnet; then",
          "    DISK_USAGE=$(df -h /near/mainnet | tail -1)",
          "    echo \"✅ Data volume mounted: $DISK_USAGE\"",
          "else",
          "    echo '❌ Data volume not mounted'",
          "    exit 1",
          "fi",
          "",
          "# Check NEAR RPC endpoint",
          "echo '--- NEAR RPC Endpoint ---'",
          "if curl -s -f http://localhost:3030/status >/dev/null; then",
          "    STATUS=$(curl -s http://localhost:3030/status | jq -r '.sync_info.syncing')",
          "    LATEST_BLOCK=$(curl -s http://localhost:3030/status | jq -r '.sync_info.latest_block_height')",
          "    echo \"✅ RPC endpoint responding, syncing: $STATUS, block: $LATEST_BLOCK\"",
          "else",
          "    echo '⚠️  RPC endpoint not yet ready (normal during initial sync)'",
          "fi",
          "",
          "# Check health endpoint",
          "echo '--- Health Endpoint ---'",
          "if curl -s -f http://localhost:8080/health >/dev/null; then",
          "    HEALTH=$(curl -s http://localhost:8080/health)",
          "    echo \"✅ Health endpoint: $HEALTH\"",
          "else",
          "    echo '⚠️  Health endpoint not yet ready'",
          "fi",
          "",
          "# Check system resources",
          "echo '--- System Resources ---'",
          "echo \"Memory: $(free -h | grep Mem)\"",
          "echo \"Load: $(uptime | cut -d',' -f3- | cut -d':' -f2)\"",
          "echo \"Disk I/O: $(iostat -d 1 1 | tail -n +4)\"",
          "",
          "# Check log file growth (indicates sync activity)",
          "echo '--- NEAR Logs ---'",
          "if [[ -f /var/log/near-node.log ]]; then",
          "    LOG_SIZE=$(wc -c < /var/log/near-node.log)",
          "    RECENT_LINES=$(tail -5 /var/log/near-node.log)",
          "    echo \"✅ Log file size: $LOG_SIZE bytes\"",
          "    echo \"Recent log entries:\"",
          "    echo \"$RECENT_LINES\"",
          "else",
          "    echo '⚠️  NEAR log file not found'",
          "fi",
          "",
          "echo \"$(date): Health check completed\" | tee -a /var/log/near-health-check.log",
          "echo '=== Health Check Summary: ✅ Node appears healthy ==='",
          ""
        ]
      }
    }
  ]
}
